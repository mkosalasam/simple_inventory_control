@model IEnumerable<InventoryControlClient.ViewModels.ProductViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReOrderLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitPrice)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @if (item.ReOrderLevel >= item.Quantity)
                {
                    <span class="badge badge-danger">
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </span>
                }
                else
                {
                    <span class="badge badge-success">
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </span>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReOrderLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                <a href="@Url.Action("Create","Stocks", new {productId = item.Id})">Add Stock</a> |
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
